// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResturantManagementSystem.Infrastructure.Persistence;

#nullable disable

namespace ResturantManagementSystem.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250729072606_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Items", (string)null);

                    b.HasDiscriminator<string>("ItemType").HasValue("Item");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ResturantManagementSystem.Domain.Entities.Drink", b =>
                {
                    b.HasBaseType("Item");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Drink");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedAt = new DateTime(2025, 7, 29, 10, 26, 5, 874, DateTimeKind.Local).AddTicks(1115),
                            IsDeleted = false,
                            Name = "Coffee",
                            Price = 4.50m,
                            Type = "Hot"
                        },
                        new
                        {
                            Id = -2,
                            CreatedAt = new DateTime(2025, 7, 29, 10, 26, 5, 875, DateTimeKind.Local).AddTicks(6803),
                            IsDeleted = false,
                            Name = "Hot Chocolate",
                            Price = 5.00m,
                            Type = "Hot"
                        },
                        new
                        {
                            Id = -3,
                            CreatedAt = new DateTime(2025, 7, 29, 10, 26, 5, 875, DateTimeKind.Local).AddTicks(6841),
                            IsDeleted = false,
                            Name = "Iced Tea",
                            Price = 3.75m,
                            Type = "Cold"
                        });
                });

            modelBuilder.Entity("ResturantManagementSystem.Domain.Entities.Food", b =>
                {
                    b.HasBaseType("Item");

                    b.HasDiscriminator().HasValue("Food");

                    b.HasData(
                        new
                        {
                            Id = -11,
                            CreatedAt = new DateTime(2025, 7, 29, 10, 26, 5, 876, DateTimeKind.Local).AddTicks(1872),
                            IsDeleted = false,
                            Name = "Burger",
                            Price = 10.99m
                        },
                        new
                        {
                            Id = -12,
                            CreatedAt = new DateTime(2025, 7, 29, 10, 26, 5, 876, DateTimeKind.Local).AddTicks(1893),
                            IsDeleted = false,
                            Name = "Salad",
                            Price = 7.50m
                        },
                        new
                        {
                            Id = -13,
                            CreatedAt = new DateTime(2025, 7, 29, 10, 26, 5, 876, DateTimeKind.Local).AddTicks(1896),
                            IsDeleted = false,
                            Name = "Pizza",
                            Price = 12.00m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
